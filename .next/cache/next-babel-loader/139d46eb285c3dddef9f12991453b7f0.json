{"ast":null,"code":"var _jsxFileName = \"/Users/julianakatz/Documents/MIT/Module 29/full-stack-restaurant-app-1-self-study-activities_starter/GraphQL Schema And Query Types/next-restaurant-05-master/components/context.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// /* /context/AppContext.js */\n// import React from \"react\";\n// // create auth context with default value\n// // set backup default for isAuthenticated if none is provided in Provider\n// const AppContext = React.createContext({\n//   isAuthenticated: true,\n//   cart: { items: [], total: 0 },\n//   addItem: () => {},\n//   removeItem: () => {},\n//   user: false,\n//   setUser: () => {},\n// });\n// export default AppContext;\nimport { createContext, useState } from \"react\";\nexport const AppContext = /*#__PURE__*/createContext({});\nexport const AppProvider = ({\n  children\n}) => {\n  const {\n    0: globalData,\n    1: setGlobalData\n  } = useState({\n    isAuthenticated: false,\n    setIsAuthenticated: () => {},\n    cart: {\n      items: [],\n      total: 0\n    },\n    user: false,\n    setUser: () => {},\n    addItems: () => {},\n    removeItems: () => {}\n  });\n\n  globalData.setIsAuthenticated = boolVal => {\n    setGlobalData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      isAuthenticated: boolVal\n    }));\n  };\n\n  globalData.setUser = userData => {\n    setGlobalData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      user: userData\n    }));\n  };\n\n  globalData.addItems = item => {\n    let {\n      items\n    } = globalData.cart;\n    let foundItem = true;\n\n    if (items.length > 0) {\n      foundItem = items.find(i => i.attributes.dishId === item.attributes.dishId);\n      if (!foundItem) foundItem = false;\n    } else {\n      foundItem = false;\n    }\n\n    if (!foundItem) {\n      let temp = JSON.parse(JSON.stringify(item));\n      temp.quantity = 1;\n      var newCart = {\n        items: [...globalData.cart.items, temp],\n        total: globalData.cart.total + item.attributes.price\n      };\n      setGlobalData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        cart: newCart\n      }));\n    } else {\n      newCart = {\n        items: items.map(item => {\n          if (item.attributes.dishId === foundItem.attributes.dishId) {\n            return Object.assign({}, item, {\n              quantity: item.quantity + 1\n            });\n          } else {\n            return item;\n          }\n        }),\n        total: globalData.cart.total + item.attributes.price\n      };\n      setGlobalData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        cart: newCart\n      }));\n    }\n  };\n\n  globalData.removeItems = item => {\n    let {\n      items\n    } = globalData.cart;\n    const foundItem = items.find(i => i.attributes.dishId === item.attributes.dishId);\n    console.log(foundItem);\n\n    if (foundItem.quantity > 1) {\n      var newCart = {\n        items: items.map(item => {\n          if (item.attributes.dishId === foundItem.attributes.dishId) {\n            return Object.assign({}, item, {\n              quantity: item.quantity - 1\n            });\n          } else {\n            return item;\n          }\n        }),\n        total: globalData.cart.total - item.attributes.price\n      };\n    } else {\n      const index = items.findIndex(i => i.attributes.dishId === foundItem.attributes.dishId);\n      items.splice(index, 1);\n      var newCart = {\n        items: items,\n        total: globalData.cart.total - item.attributes.price\n      };\n    }\n\n    setGlobalData(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      cart: newCart\n    }));\n  };\n\n  return __jsx(AppContext.Provider, {\n    value: {\n      globalData,\n      setGlobalData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport default AppContext;","map":{"version":3,"sources":["/Users/julianakatz/Documents/MIT/Module 29/full-stack-restaurant-app-1-self-study-activities_starter/GraphQL Schema And Query Types/next-restaurant-05-master/components/context.js"],"names":["createContext","useState","AppContext","AppProvider","children","globalData","setGlobalData","isAuthenticated","setIsAuthenticated","cart","items","total","user","setUser","addItems","removeItems","boolVal","prev","userData","item","foundItem","length","find","i","attributes","dishId","temp","JSON","parse","stringify","quantity","newCart","price","map","Object","assign","console","log","index","findIndex","splice"],"mappings":"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","sourcesContent":["// /* /context/AppContext.js */\n\n// import React from \"react\";\n// // create auth context with default value\n\n// // set backup default for isAuthenticated if none is provided in Provider\n// const AppContext = React.createContext({\n//   isAuthenticated: true,\n//   cart: { items: [], total: 0 },\n//   addItem: () => {},\n//   removeItem: () => {},\n//   user: false,\n//   setUser: () => {},\n// });\n// export default AppContext;\n\nimport { createContext, useState } from \"react\";\n\nexport const AppContext = createContext({});\n\nexport const AppProvider = ({ children }) => {\n  const [globalData, setGlobalData] = useState({\n    isAuthenticated: false,\n    setIsAuthenticated: () => {},\n    cart: {\n      items: [],\n      total: 0,\n    },\n    user: false,\n    setUser: () => {},\n    addItems: () => {},\n    removeItems: () => {},\n  });\n\n  globalData.setIsAuthenticated = (boolVal) => {\n    setGlobalData((prev) => ({ ...prev, isAuthenticated: boolVal }));\n  };\n\n  globalData.setUser = (userData) => {\n    setGlobalData((prev) => ({ ...prev, user: userData }));\n  };\n\n  globalData.addItems = (item) => {\n    let { items } = globalData.cart;\n    let foundItem = true;\n\n    if (items.length > 0) {\n      foundItem = items.find(\n        (i) => i.attributes.dishId === item.attributes.dishId\n      );\n\n      if (!foundItem) foundItem = false;\n    } else {\n      foundItem = false;\n    }\n\n    if (!foundItem) {\n      let temp = JSON.parse(JSON.stringify(item));\n      temp.quantity = 1;\n\n      var newCart = {\n        items: [...globalData.cart.items, temp],\n        total: globalData.cart.total + item.attributes.price,\n      };\n\n      setGlobalData((prev) => ({ ...prev, cart: newCart }));\n    } else {\n      newCart = {\n        items: items.map((item) => {\n          if (item.attributes.dishId === foundItem.attributes.dishId) {\n            return Object.assign({}, item, { quantity: item.quantity + 1 });\n          } else {\n            return item;\n          }\n        }),\n        total: globalData.cart.total + item.attributes.price,\n      };\n\n      setGlobalData((prev) => ({ ...prev, cart: newCart }));\n    }\n  };\n\n  globalData.removeItems = (item) => {\n    let { items } = globalData.cart;\n\n    const foundItem = items.find(\n      (i) => i.attributes.dishId === item.attributes.dishId\n    );\n\n    console.log(foundItem);\n\n    if (foundItem.quantity > 1) {\n      var newCart = {\n        items: items.map((item) => {\n          if (item.attributes.dishId === foundItem.attributes.dishId) {\n            return Object.assign({}, item, { quantity: item.quantity - 1 });\n          } else {\n            return item;\n          }\n        }),\n        total: globalData.cart.total - item.attributes.price,\n      };\n    } else {\n      const index = items.findIndex(\n        (i) => i.attributes.dishId === foundItem.attributes.dishId\n      );\n\n      items.splice(index, 1);\n\n      var newCart = {\n        items: items,\n        total: globalData.cart.total - item.attributes.price,\n      };\n    }\n\n    setGlobalData((prev) => ({ ...prev, cart: newCart }));\n  };\n\n  return (\n    <AppContext.Provider value={{ globalData, setGlobalData }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;"]},"metadata":{},"sourceType":"module"}